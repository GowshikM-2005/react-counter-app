pipeline {
    agent any

    environment {
        REGISTRY = "gowshikm"
        IMAGE_NAME = "counter-app"
        GIT_CREDENTIALS = "git-creds"
        DOCKER_CREDENTIALS = "docker-hub-creds"
        MANIFEST_REPO = "https://github.com/GowshikM-2005/react-counter-deploy.git"
        MANIFEST_BRANCH = "main"
        IMAGE_TAG = "v${env.BUILD_NUMBER}"
    }

    triggers {
        pollSCM('* * * * *')  // OR use Git webhook
    }

    stages {

        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/GowshikM-2005/react-counter-app.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    
                    sh "docker build -t ${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG} ."
                }
            }
        }

   stage('Push to Registry') {
    steps {
        withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS,
                usernameVariable: 'USER',
                passwordVariable: 'PASS')]) {
            script {
                def IMAGE = "${REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}"
                sh """
                    echo "üîê Logging in to Docker Hub..."
                    echo $PASS | docker login -u $USER --password-stdin
                    echo "üöÄ Pushing image ${IMAGE}..."
                    docker push ${IMAGE}
                """
            }
        }
    }
}


       stage('Update K8s Manifest') {
    steps {
        script {
            sh """
                echo "üì• Cloning deployment repo..."
                git clone -b $MANIFEST_BRANCH $MANIFEST_REPO k8s
                cd k8s

                echo "üìù Updating image tag in deployment.yaml..."
                sed -i 's|image: .*|image: $REGISTRY/$IMAGE_NAME:$IMAGE_TAG|g' k8s/deployment.yaml

                echo "‚úÖ Manifest updated successfully!"
            """
        }
    }
}

        stage('Commit & Push Manifest') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: GIT_CREDENTIALS,
                        keyFileVariable: 'SSH_KEY')]) {
                    sh '''
                    git config user.email "gowshik0105@gmail.com"
                    git config user.name "GowshikM-2005"
                    git add k8s/deployment.yaml
                    git commit -m "Update image tag"
                    GIT_SSH_COMMAND="ssh -i $SSH_KEY -o StrictHostKeyChecking=no" \
                        git push origin main
                    '''
                }
            }
        }
    }
}
